%% -*- mode: erlang -*-
[
 %% Riak config
 {riak, [
         %% storage_backend specifies the Erlang module defining the storage mechanism
         %%  that will be used on this node.
         {storage_backend, riak_dets_backend},

         %% Different storage backends can use other configuration variables.  For
         %%  instance, riak_dets_backend_root determines the directory under which
         %%  dets files will be placed.
         {riak_dets_backend_root, "data/dets"},

         %% Default location of ringstate
         {ring_state_dir, "data/ring"},

         %% riak_web_ip is the IP address that Riak's HTTP interface will bind to.
         %%  If this is undefined, the HTTP interface will not run.
         {riak_web_ip, "127.0.0.1"},

         %% riak_web_port is the TCP port that Riak's HTTP interface will bind to.
         {riak_web_port, 8098},

         %% riak_handoff_port is the TCP port that Riak uses for intra-cluster
         %% data handoff.
         {riak_handoff_port, 8099},

         %% jiak_name is the first part of all URLs used by Riak's JSON HTTP interface.
         %%  See the JSON HTTP interface documents for more details.  If you change this,
         %%  the defaults used by some Riak HTTP clients may not work.
         {jiak_name, "jiak"},

         %% raw_name is the first part of all URLS used by Riak's raw HTTP interface.
         %%  See riak_web.erl and raw_http_resource.erl for details.
         {raw_name, "raw"},

         %% mapred_name is URL used to submit map/reduce requests to Riak.
         {mapred_name, "mapred"},

         %% js_vm_count is the number of Javascript VMs to start per Riak node.
         %% 8 is a good default for smaller installations. A larger number like
         %% 12 or 16 is appropriate for installations handling lots of map/reduce
         %% processing.
         {js_vm_count, 8}

         %% js_source_dir should point to a directory containing Javascript source
         %% files which will be loaded by Riak when it initializes Javascript VMs.
         %{js_source_dir, "/tmp/js_source"}

        ]},

 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "log/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "log/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
         ]}
].
